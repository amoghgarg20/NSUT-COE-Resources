df <- read.csv('D:/Machine Learning/Data Files/Data Files/1. ST Academy - Crash course and Regression files/House_Price.csv',header=TRUE)
str(df)
df <- read.csv('D:/Machine Learning/Data Files/Data Files/1. ST Academy - Crash course and Regression files/House_Price.csv',header=TRUE)
str(df)
View(df)
#EDD
summary(df)
#Histogram
hist(df$crime_rate)
#Scatter Plot
pairs(~price+crime_rate+rainfall, data=df)
#Bar Graph
bargraph(table(df$airport))
#Bar Graph
barplot(table(df$airport))
5+8
clear
head(df,5)
head(df,5)
view(df)
head(df)
head(df)
df <- read.csv("Iris.csv", header = TRUE, sep = ",")
df <- read.csv("D:\NSUT Work\CHS\Iris.csv", header = TRUE, sep = ",")
df <- read.csv("D:/NSUT Work/CHS/Iris.csv", header = TRUE, sep = ",")
view(df)
head(df,5)
head(df,5)
View(df)
print(summ)
output <- summary(df)
df
df
df <- read.csv("D:/NSUT Work/CHS/Iris.csv", header = TRUE)
df
View(df)
y <- table(df$Species)
barplot(y)
barplot(y)
barplot(y, col = c("red","green","blue"))
barplot(y, horiz = TRUE ,col = c("red","green","blue"))
barplot(y, horiz = TRUE ,col = c("red","green","blue"), border = NA)
barplot(y, horiz = TRUE ,col = c("red","green","blue"), border = NA, main = "Frequency Distribution")
hist(df$SepalLengthCm)
hist(df$SepalLengthCm, main = "Sepal-Length", col = "beige")
hist(df$SepalLengthCm, main = "Sepal-Length", col = "beige", xlab = "Bins")
ggplot(iris, aes(Sepal.Length, Sepal.Width, color = Species)) +
geom_point() +
ggtitle("Scatterplot Matrix of Iris Features")
pairs(~SepalLengthcm + SepalWidthcm, data = df)
pairs(~SepalLengthCm + SepalWidthCm, data = df)
pairs(~SepalLengthCm + SepalWidthCm + PetalLengthCm + PetalWidthCm, data = df)
print("Auli is ON")
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
setwd("D:/NSUT Work/CHS/Linear_Regression_HousingData")
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
setwd("D:/NSUT Work/CHS/Linear_Regression_HousingData")
ggplot() +
geom_point(aes(x = test_set$yr_built, y = test_set$price),
colour = 'red') +
geom_line(aes(x = training_set$yr_built, y = predict(regressor, newdata = training_set)),
colour = 'blue',lwd = 2) +
ggtitle('Price vs Yr_built (Test set)') +
xlab('Price') +
ylab('Year_Built')
ggplot() +
geom_point(aes(x = test_set$yr_built, y = test_set$price),
colour = 'red') +
geom_line(aes(x = training_set$yr_built, y = predict(regressor, newdata = training_set)),
colour = 'blue',lwd = 2) +
ggtitle('Price vs Yr_built (Test set)') +
xlab('Price') +
ylab('Year_Built')
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Test set)') +
xlab('Years of experience') +
ylab('Salary')
# Importing the dataset
dataset = read.csv('D:/NSUT Work/CHS/Simple Linear Regression/R/Salary_Data.csv')
# Splitting the dataset into the Training set and Test set
# install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
source('D:/NSUT Work/CHS/Simple Linear Regression/R/simple_linear_regression.R', echo=TRUE)
source('D:/NSUT Work/CHS/Logistic Regression/R/logistic_regression.R', echo=TRUE)
